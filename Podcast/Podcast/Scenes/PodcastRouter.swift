//
//  PodcastRouter.swift
//  Podcast
//
//  Created by Burak Donat on 5.11.2020.
//  Copyright (c) 2020 Burak Donat. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

@objc protocol PodcastRoutingLogic {
    func routeToPodcastDetails(segue: UIStoryboardSegue?)
}

protocol PodcastDataPassing {
  var dataStore: PodcastDataStore? { get }
}

class PodcastRouter: NSObject, PodcastRoutingLogic, PodcastDataPassing {
  weak var viewController: PodcastViewController?
  var dataStore: PodcastDataStore?
  
  // MARK: Routing
  
  func routeToPodcastDetails(segue: UIStoryboardSegue?) {
    if let segue = segue {
      let destinationVC = segue.destination as! PodcastDetailViewController
      var destinationDS = destinationVC.router!.dataStore!
      passDataToPodcastDetail(source: dataStore!, destination: &destinationDS)
    } else {
      let destinationVC = viewController?.storyboard?.instantiateViewController(withIdentifier: "PodcastDetailViewController") as! PodcastDetailViewController
      var destinationDS = destinationVC.router!.dataStore!
      passDataToPodcastDetail(source: dataStore!, destination: &destinationDS)
      navigateToPodcastDetail(source: viewController!, destination: destinationVC)
    }
  }

  // MARK: Navigation
  
  func navigateToPodcastDetail(source: PodcastViewController, destination: PodcastDetailViewController) {
    source.show(destination, sender: nil)
  }
  
  // MARK: Passing data
  
  func passDataToPodcastDetail(source: PodcastDataStore, destination: inout PodcastDetailDataStore) {
    
    let selectedPodcast = viewController?.tableView.indexPathForSelectedRow?.row
    destination.podcast = source.podcasts?[selectedPodcast!]
  }
}
