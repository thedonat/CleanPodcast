//
//  PodcastDetailInteractor.swift
//  Podcast
//
//  Created by Burak Donat on 6.11.2020.
//  Copyright (c) 2020 Burak Donat. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import PodcastAPI

protocol PodcastDetailBusinessLogic {
    func fetchPodcast(request: PodcastDetail.FetchPodcast.Request)
    func playPodcast(request: PodcastDetail.FetchPodcast.Request)
}

protocol PodcastDetailDataStore {
    var podcast: PodcastModel! {get set}
}

class PodcastDetailInteractor: PodcastDetailBusinessLogic, PodcastDetailDataStore {
    
    var podcast: PodcastModel!
    
    var presenter: PodcastDetailPresentationLogic?
    var worker: PodcastDetailWorker?
    //var name: String = ""
    
    // MARK: Fetch podcast
    
    func fetchPodcast(request: PodcastDetail.FetchPodcast.Request) {
        let podcast = self.podcast
        if let podcast = podcast {
            let response = PodcastDetail.FetchPodcast.Response(podcasts: podcast)
            self.presenter?.presentPodcast(response: response)
        }
    }
    
    
    // MARK: Play Podcasts

    func playPodcast(request: PodcastDetail.FetchPodcast.Request) {
        let podcastUrl = self.podcast.url
        if let url = URL(string: podcastUrl ) {
              UIApplication.shared.open(url, options: [:], completionHandler: nil)
          }
    }
}
