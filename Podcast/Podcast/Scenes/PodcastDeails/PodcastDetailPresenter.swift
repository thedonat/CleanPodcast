//
//  PodcastDetailPresenter.swift
//  Podcast
//
//  Created by Burak Donat on 6.11.2020.
//  Copyright (c) 2020 Burak Donat. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol PodcastDetailPresentationLogic {
  func presentPodcast(response: PodcastDetail.FetchPodcast.Response)
}

class PodcastDetailPresenter: PodcastDetailPresentationLogic {
  weak var viewController: PodcastDetailDisplayLogic?
  
  // MARK: Present Podcast
  
  func presentPodcast(response: PodcastDetail.FetchPodcast.Response) {
    

    let displayedPodcast = PodcastDetail.FetchPodcast.ViewModel.DisplayedPodcast(artistName: response.podcasts.artistName,
                                                                                 name: response.podcasts.name,
                                                                                 artworkUrl100: response.podcasts.artworkUrl100,
                                                                                 date: getFormattedDate(date: response.podcasts.releaseDate) ?? "",
                                                                                 copyright: response.podcasts.copyright ?? "")
    
    let viewModel = PodcastDetail.FetchPodcast.ViewModel(displayedPocast: displayedPodcast)
    viewController?.displayFetchedPodcast(viewModel: viewModel)
  }
    
    func getFormattedDate(date: String) -> String? {
        let dateFormatter = DateFormatter()
        dateFormatter.dateFormat = "yyyy-MM-dd"
        
        guard let date = dateFormatter.date(from: date) else { return nil }
        
        dateFormatter.dateFormat = "MMMM yyyy"
        let formattedDate = dateFormatter.string(from: date)
        
        return formattedDate
    }
}
